#ifndef _IJK_H_
#define _IJK_H_

#ifdef _MONT_C_CODE_
	// The list of the bitlength of each SOP
	static uint64_t bL[] =	{
		2,  3,  3,  4,  4,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6,  6,  6,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,
		9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
		10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11
	};
#endif

#ifdef _ISOG_H_

	// The list of Small Odd Primes (SOPs) is stored such that l_0 < l_1 < ... < l_{n-1}
	static uint64_t L[] =	{
		3,  5,  7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97,101,103,107,109,113,127,131,137,139,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,
		367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,
		823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,
		1249,1259,1277,1279,1283,1289
	};

	#ifndef _C_CODE_

		// Sizes for the sets I, J, and K required in the new velusqrt formulae
		#if CORES==1

			static int sizeI[] =	{
			//	3,  5,  7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,
				0,  1,  1,  2,  3,  2,  2,  2,  3,  3,  4,  3,  5,  5,  4,  4,  5,  4,  4,  4,  4,  5,  5,  6,  6,  6,  6,  6,  7,  6,  6,  6,  6,  6,  6,  8,  8,  7,  7,  7,  7,  8,  8,  8,  7,  9,  8,  8,  8,  8, 10, 10,  8,  8,  8,  8,  8,  8, 10,  9,  9,  9,  9,  9, 10, 10, 10, 10, 11, 11,
				11, 11, 11, 11, 12, 11, 11, 11, 13, 13, 13, 12, 12, 11, 11, 14, 14, 14, 14, 13, 12, 11, 11, 11, 14, 13, 13, 13, 17, 17, 14, 14, 14, 12, 12, 12, 12, 12, 12, 12, 14, 14, 13, 13, 13, 13, 13, 13, 15, 14, 14, 14, 14, 14, 14, 14, 15, 14, 14, 14, 14, 14, 14, 16, 16, 14, 14, 14, 14, 17,
				17, 17, 17, 16, 15, 15, 15, 15, 18, 18, 18, 17, 15, 15, 19, 19, 18, 18, 18, 17, 16, 16, 16, 16, 19, 19, 18, 18, 18, 17, 16, 16, 16, 16, 16, 16, 16, 19, 18, 17, 17, 17, 17, 17, 17, 17, 17, 19, 18, 18, 18, 18, 18, 18, 20, 20, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20
			};

			static int sizeJ[] =	{
			//	3,  5,  7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,
				0,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  3,  2,  2,  3,  3,  3,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  5,  5,  5,  5,  6,  6,  5,  5,  6,  6,  6,  6,  6,  6,  6,  7,  6,  7,  7,  7,  7,  6,  6,  8,  8,  8,  8,  8,  8,  7,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,
				8,  8,  8,  8,  8,  9,  9,  9,  8,  8,  8,  9,  9, 10, 10,  8,  8,  8,  8,  9, 10, 11, 11, 11,  9, 10, 10, 10,  8,  8, 10, 10, 10, 12, 12, 12, 12, 12, 12, 12, 11, 11, 12, 12, 12, 12, 12, 12, 11, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 12, 12, 14, 14, 14, 14, 12,
				12, 12, 12, 13, 14, 14, 14, 14, 12, 12, 12, 13, 15, 15, 12, 12, 13, 13, 13, 14, 15, 15, 15, 15, 13, 13, 14, 14, 14, 15, 16, 16, 16, 16, 16, 16, 16, 14, 15, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16
			};

			static int sizeK[] =	{
			//	3,  5,  7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,
				1,  0,  1,  1,  0,  0,  1,  3,  2,  3,  2,  2,  1,  3,  2,  5,  0,  1,  3,  4,  7,  1,  4,  0,  2,  3,  5,  6,  0,  3,  5,  8,  9,  3,  6,  1,  3,  2,  5,  6, 11,  0,  2,  3,  7,  3,  1,  2,  4,  7,  0,  5,  0,  3,  6,  7, 10, 12,  1,  2,  9, 11, 12, 14,  5,  8, 13, 14,  0,  3,
				7, 10, 13, 15,  2,  0,  2,  6,  1,  2,  7,  0,  3,  1,  4,  4,  6,  7,  9,  5,  3,  3,  7,  9,  2,  0,  1, 10,  1,  6,  1,  4,  5,  0,  5,  8, 11, 12, 15, 18,  0,  1,  3,  8,  9, 11, 14, 17,  0,  0,  2,  5,  9, 14, 18, 23,  3,  2,  5,  7, 11, 14, 16,  0,  2,  1,  6, 12, 13,  2,
				3,  5,  6,  3,  6,  8,  9, 11,  6,  8,  9,  1,  3,  5,  3,  8,  0,  2,  5,  0,  3,  5,  8, 11,  1,  4,  0,  2,  5,  0,  3,  4,  7, 12, 13, 18, 19,  2,  3,  1,  2,  4,  7, 10, 14, 17, 20,  5,  0,  5,  9, 14, 17, 20,  0,  6,  0,  3,  6,  7, 10, 16, 21, 30, 31,  1,  4
			};

		#elif CORES==2

			static int sizeI[] =	{
			//	3,  5,  7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,
				0,  1,  1,  2,  3,  2,  2,  2,  3,  3,  4,  3,  5,  5,  4,  4,  5,  4,  4,  4,  4,  5,// 	5,	6,	5,	5,	5,	5,	5,	6,	6,	6,	6,	6,	6,	6,	6,	7,	7,	7,	7,	8,	7,	7,	7,	7,	8,	8,	8,	8,	8,	8,	8,	8,	8,	8,	8,	8,	8,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	10,	10,	10,	10,	10,	11,	10,	10,	10,	10,	10,	10,	10,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	13,	13,	13,	13,	13,	13,	13,	14,	13,	13,	13,	13,	13,	13,	13,	14,	14,	14,	14,	14,	14,	14,	14,	14,	14,	14,	14,	14,	14,	14,	14,	14,	15,	15,	15,	15,	15,	15,	15,	15,	15,	15,	15,	15,	15,	15,	15,	15,	16,	16,	16,	16,	16,	16,	16,	16,	16,	17,	16,	16,	16,	16,	16,	16,	16,	16,	16,	17,	17,	17,	17,	17,	17,	17,	17,	17,	18,	17,	17,	17,	17,	17,	17,	17,	17,	17,	18,	18,	18,	18,	18,	18,	18,	18,	18
																											5,	6,	6,	5,	6,	5,	6,	6,	7,	6,	6,	6,	7,	6,	6,	7,	7,	7,	7,	8,	8,	7,	8,	7,	8,	9,	8,	9,	9,	8,	8,	8,	9,	8,	9,	9,	8,	10,	9,	10,	9,	11,	9,	9,	10,	10,	10,	11,	10,	10,	11,	10,	11,	12,	10,	12,	12,	10,	11,	11,	10,	11,	13,	12,	12,	11,	11,	11,	11,	11,	11,	11,	11,	11,	12,	13,	13,	13,	13,	12,	14,	12,	12,	12,	12,	12,	13,	13,	13,	13,	14,	14,	15,	15,	13,	13,	14,	15,	13,	13,	13,	15,	15,	13,	13,	14,	14,	14,	16,	15,	14,	15,	14,	15,	14,	16,	15,	14,	15,	15,	15,	14,	15,	15,	16,	16,	15,	15,	16,	16,	16,	15,	17,	16,	15,	16,	16,	15,	17,	16,	18,	17,	17,	18,	16,	17,	19,	17,	16,	16,	17,	19,	17,	16,	16,	16,	16,	17,	17,	17,	18,	17,	19,	17,	18,	17,	18,	17,	18,	19,	19,	19,	17,	17,	17,	17,	20,	18,	18,	18,	18,	19,	18,	18,	21
				
			};

			static int sizeJ[] =	{
			//	3,  5,  7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,
				0,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  3,  2,  2,  3,  3,  3,  4,  4,  4,  4,  4,//	4,	4,	5,	5,	5,	5,	5,	5,	5,	5,	5,	6,	6,	6,	6,	6,	6,	6,	6,	6,	7,	7,	7,	7,	7,	7,	7,	7,	7,	7,	8,	8,	8,	8,	8,	8,	8,	8,	8,	8,	8,	8,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	10,	10,	10,	10,	10,	10,	10,	10,	10,	10,	10,	10,	10,	10,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	13,	13,	13,	13,	13,	13,	13,	13,	13,	13,	13,	13,	13,	13,	13,	14,	14,	14,	14,	14,	14,	14,	14,	14,	14,	14,	14,	14,	14,	14,	14,	14,	15,	15,	15,	15,	15,	15,	15,	15,	15,	15,	15,	15,	15,	15,	15,	15,	15,	15,	16,	16,	16,	16,	16,	16,	16,	16,	16,	16,	16,	16,	16,	16,	16,	16,	16,	16,	16,	17,	17,	17,	17,	17,	17,	17,	17,	17,	17,	17,	17,	17,	17,	17,	17,	17,	17
																											4,	4,	4,	5,	4,	5,	4,	5,	4,	5,	5,	6,	5,	6,	6,	6,	6,	6,	6,	6,	6,	7,	6,	7,	7,	6,	7,	6,	6,	7,	8,	8,	7,	8,	7,	7,	8,	7,	8,	7,	8,	7,	9,	9,	8,	8,	8,	8,	9,	9,	8,	9,	8,	8,	10,	8,	8,	10,	9,	9,	10,	10,	8,	9,	9,	10,	10,	10,	11,	11,	11,	11,	11,	11,	10,	10,	10,	10,	10,	11,	10,	12,	12,	12,	12,	12,	11,	11,	11,	11,	11,	11,	10,	10,	12,	12,	11,	11,	13,	13,	13,	11,	11,	13,	13,	13,	13,	13,	11,	12,	13,	12,	13,	13,	14,	12,	13,	14,	13,	13,	13,	14,	14,	14,	13,	13,	14,	14,	13,	13,	14,	15,	13,	14,	15,	14,	14,	15,	14,	15,	13,	14,	14,	13,	15,	14,	13,	15,	16,	16,	15,	13,	15,	16,	16,	16,	16,	16,	16,	16,	15,	16,	14,	16,	15,	16,	16,	17,	16,	15,	15,	15,	17,	17,	17,	17,	15,	17,	17,	17,	17,	16,	17,	17,	15
				};

			static int sizeK[] =	{
			//	3,  5,  7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,
				1,  0,  1,  1,  0,  0,  1,  3,  2,  3,  2,  2,  1,  3,  2,  5,  0,  1,  3,  4,  7,  1,//	4,	0,	0,	1,	3,	4,	6,	3,	5,	8,	9,	3,	6,	9,	11,	2,	5,	6,	11,	0,	0,	1,	7,	13,	1,	2,	4,	7,	8,	13,	0,	3,	6,	7,	10,	12,	13,	2,	9,	11,	12,	14,	3,	6,	11,	12,	14,	17,	3,	6,	9,	11,	14,	0,	0,	4,	9,	10,	15,	16,	19,	1,	4,	8,	10,	11,	13,	19,	1,	3,	7,	9,	12,	18,	19,	6,	9,	14,	17,	20,	21,	0,	5,	8,	11,	12,	15,	18,	20,	21,	3,	8,	9,	11,	14,	17,	18,	0,	0,	3,	7,	12,	16,	21,	25,	2,	5,	7,	11,	14,	16,	20,	22,	1,	6,	12,	13,	18,	19,	21,	22,	27,	6,	8,	9,	11,	18,	20,	21,	23,	3,	5,	9,	14,	18,	20,	23,	26,	3,	5,	8,	11,	15,	18,	24,	26,	29,	0,	3,	4,	7,	12,	13,	18,	19,	22,	31,	1,	2,	4,	7,	10,	14,	17,	20,	31,	0,	3,	7,	12,	15,	18,	22,	28,	30,	33,	2,	3,	6,	12,	17,	26,	27,	29,	32
																											4,	0,	2,	1,	5,	4,	8,	3,	9,	8,	9,	3,	8,	9,	11,	2,	5,	6,	11,	0,	2,	1,	9,	13,	1,	6,	4,	11,	12,	13,	0,	3,	8,	7,	12,	14,	13,	6,	9,	15,	12,	4,	3,	6,	13,	14,	16,	3,	3,	6,	13,	11,	18,	6,	0,	12,	17,	10,	17,	18,	19,	1,	16,	12,	14,	11,	13,	19,	1,	3,	7,	9,	12,	18,	21,	10,	13,	18,	21,	20,	5,	0,	5,	8,	11,	12,	17,	20,	22,	23,	7,	12,	21,	23,	14,	17,	22,	6,	0,	3,	7,	20,	24,	21,	25,	2,	5,	7,	23,	18,	16,	24,	22,	3,	6,	20,	15,	18,	21,	23,	24,	27,	6,	8,	13,	15,	18,	20,	25,	27,	5,	5,	17,	16,	18,	22,	25,	26,	7,	5,	20,	15,	19,	30,	24,	30,	15,	0,	3,	4,	9,	30,	15,	18,	19,	22,	31,	1,	2,	4,	11,	10,	26,	17,	24,	31,	0,	3,	9,	20,	23,	26,	22,	28,	30,	33,	14,	3,	6,	12,	17,	30,	27,	29,	14
				};

		#elif CORES==4

			static int sizeI[] =	{
			//	3,  5,  7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,
				1,  0,  1,  1,  0,  0,  1,  3,  2,  3,  2,  2,  1,  3,  2,  5,  0,  1,  3,  4,  7,  1,//	3,	4,	4,	4,	4,	4,	4,	5,	4,	4,	4,	4,	4,	5,	5,	5,	5,	5,	5,	6,	6,	6,	5,	5,	5,	5,	5,	5,	6,	6,	6,	6,	6,	6,	6,	7,	7,	6,	6,	6,	6,	6,	6,	7,	7,	7,	7,	7,	7,	7,	7,	7,	8,	7,	7,	7,	7,	7,	7,	7,	7,	7,	8,	8,	8,	8,	8,	8,	8,	8,	8,	8,	9,	8,	8,	8,	8,	8,	8,	8,	8,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	10,	10,	10,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	10,	10,	10,	10,	10,	10,	10,	10,	10,	10,	11,	10,	10,	10,	10,	10,	10,	10,	10,	10,	10,	10,	10,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	12,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	13,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	13,	13,	13,	13,	13,	13
																											3,	4,	4,	4,	4,	4,	4,	5,	4,	5,	4,	5,	4,	5,	6,	6,	5,	5,	5,	6,	6,	7,	5,	5,	5,	5,	6,	5,	6,	6,	7,	6,	6,	6,	6,	7,	8,	6,	7,	6,	6,	7,	6,	8,	8,	7,	7,	8,	7,	7,	7,	7,	8,	8,	8,	7,	7,	8,	8,	8,	7,	7,	9,	8,	8,	8,	8,	8,	8,	8,	8,	8,	9,	8,	8,	9,	9,	9,	9,	9,	8,	9,	10,	10,	10,	9,	9,	10,	10,	10,	9,	10,	11,	11,	9,	10,	10,	9,	11,	10,	9,	10,	9,	9,	10,	10,	10,	11,	10,	11,	10,	11,	10,	12,	11,	10,	11,	10,	11,	11,	10,	11,	11,	11,	10,	10,	10,	11,	11,	13,	11,	12,	11,	11,	11,	12,	13,	11,	12,	11,	11,	12,	13,	12,	12,	12,	11,	12,	11,	12,	12,	12,	11,	12,	12,	12,	12,	14,	12,	13,	12,	12,	12,	13,	13,	13,	12,	13,	12,	13,	12,	13,	12,	13,	12,	12,	13,	13,	12,	13,	14,	14,	15,	13,	14
				};

			static int sizeJ[] =	{
			//	3,  5,  7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,
				0,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  3,  2,  2,  3,  3,  3,  4,  4,  4,  4,  4,//	3,	3,	3,	3,	3,	3,	3,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	5,	5,	5,	5,	5,	5,	5,	5,	5,	5,	5,	5,	5,	5,	5,	6,	6,	6,	6,	6,	6,	6,	6,	6,	6,	6,	6,	6,	6,	6,	6,	7,	7,	7,	7,	7,	7,	7,	7,	7,	7,	7,	7,	7,	7,	7,	7,	7,	7,	7,	7,	8,	8,	8,	8,	8,	8,	8,	8,	8,	8,	8,	8,	8,	8,	8,	8,	8,	8,	8,	8,	8,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	9,	10,	10,	10,	10,	10,	10,	10,	10,	10,	10,	10,	10,	10,	10,	10,	10,	10,	10,	10,	10,	10,	10,	10,	10,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	11,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12
																											3,	3,	3,	3,	3,	3,	3,	3,	4,	3,	4,	3,	4,	4,	3,	3,	4,	4,	4,	4,	4,	3,	5,	5,	5,	5,	4,	5,	5,	5,	4,	5,	5,	5,	5,	5,	4,	6,	5,	6,	6,	5,	6,	5,	5,	6,	6,	5,	6,	6,	6,	6,	6,	6,	6,	7,	7,	6,	6,	6,	7,	7,	6,	7,	7,	7,	7,	7,	7,	7,	7,	7,	7,	8,	8,	7,	7,	7,	7,	7,	8,	8,	7,	7,	7,	8,	8,	7,	7,	7,	8,	8,	7,	7,	9,	8,	8,	9,	7,	8,	9,	8,	9,	9,	9,	9,	9,	8,	9,	8,	9,	8,	9,	8,	9,	10,	9,	10,	9,	9,	10,	9,	9,	9,	10,	10,	10,	10,	10,	8,	10,	9,	10,	10,	10,	9,	9,	10,	10,	11,	11,	10,	9,	10,	10,	10,	11,	10,	11,	10,	10,	10,	11,	11,	11,	11,	11,	9,	11,	10,	11,	11,	11,	10,	10,	11,	12,	11,	12,	11,	12,	11,	12,	11,	12,	12,	11,	11,	12,	12,	11,	11,	10,	12,	11
				};

			static int sizeK[] =	{
			//	3,  5,  7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,
				1,  0,  1,  1,  0,  0,  1,  3,  2,  3,  2,  2,  1,  3,  2,  5,  0,  1,  3,  4,  7,  1,//	8,	0,	2,	3,	5,	6,	8,	3,	1,	4,	5,	11,	14,	1,	3,	6,	9,	10,	15,	0,	2,	3,	5,	11,	13,	14,	16,	19,	0,	5,	8,	11,	14,	15,	18,	0,	1,	2,	9,	11,	12,	14,	21,	0,	5,	6,	8,	11,	15,	18,	21,	23,	2,	2,	4,	8,	13,	14,	19,	20,	23,	25,	0,	4,	6,	7,	9,	15,	19,	21,	25,	27,	2,	4,	5,	14,	17,	22,	25,	28,	29,	0,	5,	8,	11,	12,	15,	18,	20,	21,	27,	0,	1,	3,	2,	5,	6,	12,	14,	17,	21,	26,	30,	35,	3,	6,	9,	11,	15,	18,	20,	24,	26,	33,	2,	4,	5,	10,	11,	13,	14,	19,	26,	28,	29,	31,	38,	0,	1,	3,	13,	15,	19,	24,	28,	30,	33,	36,	3,	1,	4,	7,	11,	14,	20,	22,	25,	26,	31,	32,	35,	40,	41,	2,	3,	6,	15,	17,	18,	20,	23,	26,	30,	33,	36,	3,	0,	5,	9,	14,	17,	20,	24,	30,	32,	35,	38,	39,	42,	0,	5,	14,	15,	17,	20
																											8,	0,	2,	3,	5,	6,	8,	3,	1,	8,	5,	15,	14,	1,	11,	14,	9,	10,	15,	0,	2,	15,	5,	11,	13,	14,	20,	19,	0,	5,	16,	11,	14,	15,	18,	0,	13,	2,	13,	11,	12,	18,	21,	8,	13,	6,	8,	19,	15,	18,	21,	23,	2,	6,	8,	8,	13,	18,	23,	24,	23,	25,	8,	4,	6,	7,	9,	15,	19,	21,	25,	27,	2,	4,	5,	18,	21,	26,	29,	32,	29,	0,	13,	16,	19,	12,	15,	26,	28,	29,	27,	0,	13,	15,	2,	9,	10,	12,	30,	21,	21,	30,	30,	35,	3,	6,	9,	19,	15,	26,	20,	32,	26,	9,	2,	4,	9,	10,	15,	17,	14,	23,	30,	32,	29,	31,	38,	0,	1,	27,	13,	23,	19,	24,	28,	38,	5,	36,	3,	1,	4,	11,	27,	18,	24,	26,	25,	30,	31,	36,	39,	44,	41,	2,	3,	6,	15,	41,	18,	28,	23,	26,	30,	41,	44,	3,	0,	9,	9,	18,	17,	24,	24,	34,	32,	35,	42,	43,	42,	0,	13,	22,	39,	17,	28
				};

		#endif

	#endif

	#define sI_max 50
	#define sJ_max 50
	#define sK_max 50
	
#endif

#endif /* required framework for the #I, #J, and #K, which is used in new velusqrt fomurlae on CSIDH */