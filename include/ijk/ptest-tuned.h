#ifndef _IJK_H_
#define _IJK_H_

#ifdef _MONT_C_CODE_
	// The list of the bitlength of each SOP
	static uint64_t bL[] =	{
		5, 5, 7, 12, 13, 14, 14, 14, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19

	};
#endif

#ifdef _ISOG_H_

	// The list of Small Odd Primes (SOPs) is stored such that l_0 < l_1 < ... < l_{n-1}
	static uint64_t L[] =	{
		19, 31, 83, 3119, 6143, 9173, 12203, 15233, 18269, 21313, 24329, 27361, 30389, 33409, 36451, 39499, 42499, 45533, 48563, 51593, 54617, 57641, 60679, 63703, 66733, 69761, 72797, 75821, 78853, 81883, 84913, 87943, 90971, 93997, 97039, 100057, 103087, 106121, 109141, 112181, 115201, 118247, 121259, 124291, 127321, 130349, 133379, 136417, 139439, 142469, 145501, 148513, 151553, 154589, 157627, 160639, 163673, 166703, 169733, 172759, 175811, 178817, 181871, 184879, 187907, 190979, 193979, 196991, 200023, 203051, 206081, 209123, 212141, 215179, 218213, 221227, 224261, 227299, 230327, 233347, 236377, 239417, 242441, 245471, 248509, 251519, 254557, 257591, 260609, 263647, 266671, 269701, 272737, 275767, 278801, 281833, 284857, 287873, 290923, 293941, 296969, 299993, 303019, 306049, 309079, 312107, 315179, 321193
	};

	#ifndef _C_CODE_

		// Sizes for the sets I, J, and K required in the new velusqrt formulae
		#if CORES==1

			static int sizeI[] =	{
			//	19, 31, 83, 3119, 6143,
				 2,  3,  5,   31,   45, 52, 61, 68, 71, 83, 88, 90, 87, 103, 107, 105, 118, 118, 119, 115, 123, 120, 124, 142, 139, 136, 142, 148, 154, 155, 167, 169, 172, 169, 172, 170, 174, 178, 183, 182, 180, 178, 174, 186, 204, 181, 207, 209, 211, 212, 215, 217, 219, 210, 205, 209, 213, 217, 221, 236, 230, 234, 238, 218, 244, 219, 233, 229, 227, 235, 230, 233, 236, 238, 235, 238, 237, 247, 246, 243, 246, 245, 246, 249, 250, 253, 279, 268, 267, 284, 271, 274, 266, 269, 281, 275, 278, 281, 284, 287, 290, 295, 298, 298, 301, 300, 307, 313
			};

			static int sizeJ[] =	{
			//	19, 31, 83,   3119, 6143,
				2,   2,  4,//   25,   34, 44, 50, 56, 64, 64, 69, 76, 87, 81, 85, 94, 90, 96, 102, 112, 111, 120, 122, 112, 120, 128, 128, 128, 128, 132, 127, 130, 132, 139, 141, 147, 148, 149, 149, 154, 160, 166, 174, 167, 156, 180, 161, 163, 165, 168, 169, 171, 173, 184, 192, 192, 192, 192, 192, 183, 191, 191, 191, 212, 192, 218, 208, 215, 220, 216, 224, 224, 224, 226, 232, 232, 236, 230, 234, 240, 240, 244, 246, 246, 248, 248, 228, 240, 244, 232, 246, 246, 256, 256, 248, 256, 256, 256, 256, 256, 256, 254, 254, 256, 256, 260, 256, 256
			};

			static int sizeK[] =	{
			//	19, 31, 83,  3119, 6143,
				1,   3,  1,    9,    11, 10, 1, 0, 46, 32, 20, 0, 56, 18, 35, 9, 9, 110, 5, 36, 2, 20, 83, 43, 6, 64, 46, 22, 2, 21, 38, 31, 77, 16, 15, 48, 39, 16, 36, 34, 0, 27, 77, 21, 12, 14, 35, 74, 89, 2, 80, 42, 2, 14, 93, 63, 44, 23, 2, 3, 45, 20, 19, 7, 257, 5, 61, 25, 131, 5, 0, 177, 342, 13, 66, 181, 266, 29, 35, 33, 108, 148, 188, 227, 254, 271, 54, 155, 8, 47, 3, 42, 176, 155, 24, 116, 92, 64, 53, 26, 4, 136, 125, 448, 427, 53, 405, 340
			};

		#elif CORES==2

		
			static int sizeI[] =	{
			//	19, 31, 83,   3119, 6143,
				 2,  3,  5,//   31,   45, 52, 61, 68, 71, 83, 88, 90, 87, 103, 107, 105,    118,    118,    119,    115,    123,    120,    124,    142,    139,    136,    142,    148,    154,    155,    167,    169,    172,   169,   172,      170,    174,    178,    183,    182,    180,    178,    174,    186,    204,    181,    207,    209,    211,    212,    215,    217,    219,    210,    205,    209,    213,    217,    221,    236,    230,    234,    238,    218,    244,    219,    233,    229,    227,    235,    230,    233,    236,    238,    235,    238,    237,    247,    246,    243,    246,    245,    246,    249,    250,    253,    279,    268,    267,    284,    271,    274,    266,    269,    281,    275,    278,    281,    284,    287,    290,    295,    298,    298,    301,    300,    307,    313
								28,	39, 53, 57, 65, 73, 81, 78, 84, 91,  93,	97,	 99,	105,	108,	111,	119,	119,	124,	126,	127,	130,	132,	137,	139,	145,	147,	150,	149,	162,	164,	159,	160,	167,	174,	176,	177,	180,	176,	180,	186,	179,	183,	191,	186,	199,	191,	195,	195,	200,	199,	203,   	206,	208,	207,	219,	208,	216,	212,	213,	216,	228,	223,	221,	225,	229,	229,	240,	229,	244,	236,	238,	239,	238,	249,	249,	242,	256,	257,	253,	257,	256,	260,	258,	263,	260,	260,	264,	261,	264,	273,	276,	268,	281,	272,	280,	281,	273,	276,	287,	287,	290,	291,	284,	293
			};

			static int sizeJ[] =	{
			//	19, 31, 83,   3119,  6143,
				2,   2,  4,//   25,    34, 44, 50, 56, 64, 64, 69, 76, 87, 81, 85, 94, 90, 96, 102, 112, 111, 120, 122, 112, 120, 128, 128, 128, 128, 132, 127, 130, 132, 139, 141, 147, 148, 149, 149, 154, 160, 166, 174, 167, 156, 180, 161, 163, 165, 168, 169, 171, 173, 184, 192, 192, 192, 192, 192, 183, 191, 191, 191, 212, 192, 218, 208, 215, 220, 216, 224, 224, 224, 226, 232, 232, 236, 230, 234, 240, 240, 244, 246, 246, 248, 248, 228, 240, 244, 232, 246, 246, 256, 256, 248, 256, 256, 256, 256, 256, 256, 254, 254, 256, 256, 260, 256, 256
								27,		39, 43,	53,	58,	62,	65,	77,	81,	83,	89,	93,	99,	101,	105,	109,	108,	114,	116,	120,	125,	128,	132,	132,	136,	135,	139,	141,	147,	140,	143,	152,	156,	154,	152,	155,	158,	160,	167,	168,	167,	177,	178,	174,	183,	175,	186,	186,	190,	189,	194,	194,	194,	196,	201,	193,	207,	203,	210,	213,	213,	206,	214,	219,	218,	218,	221,	214,	228,	217,	227,	229,	231,	235,	228,	231,	241,	230,	232,	239,	238,	242,	241,	246,	244,	250,	253,	252,	258,	258,	252,	252,	262,	253,	264,	259,	261,	271,	271,	263,	266,	266,	268,	277,	274
			};

			static int sizeK[] =	{
			//	19, 31, 83,  3119, 6143,
				1,   3,  1,//   9,   11, 10, 1, 0, 46, 32, 20, 0, 56, 18, 35, 9, 9, 110, 5, 36, 2, 20, 83, 43, 6, 64, 46, 22, 2, 21, 38, 31, 77, 16, 15, 48, 39, 16, 36, 34, 0, 27, 77, 21, 12, 14, 35, 74, 89, 2, 80, 42, 2, 14, 93, 63, 44, 23, 2, 3, 45, 20, 19, 7, 257, 5, 61, 25, 131, 5, 0, 177, 342, 13, 66, 181, 266, 29, 35, 33, 108, 148, 188, 227, 254, 271, 54, 155, 8, 47, 3, 42, 176, 155, 24, 116, 92, 64, 53, 26, 4, 136, 125, 448, 427, 53, 405, 340
						       47,	 29, 28,59,	76,	82,	126,	152,	72,	88,	150,	183,	147,	39,	86,	83,	92,	176,	52,	99,	101,	86,	32,	230,	102,	276,	75,	156,	165,	125,	94,	183,	108,	107,	164,	10,	158,	0,	339,	149,	21,	294,	26,	221,	132,	69,	182,	210,	156,	176,	82,	49,	391,	300,	137,	332,	267,	209,	368,	197,	423,	17,	45,	191,	395,	167,	307,	320,	137,	174,	445,	102,	195,	270,	105,	125,	29,	428,	460,	286,	403,	350,	439,	342,	451,	304,	263,	279,	174,	144,	291,	296,	484,	242,	320,	421,	288,	518,	404,	547,	340,	259,	77,	253,	32
			};

		#elif CORES==4  
			 static int sizeI[] =   { 
			//	19, 31, 83,   3119,  6143,
				2,   2,  4, 	//0,	0,	36,	41,	47,	50,	52,	55,	58,	62,	67,	69,	70,	74,	77,	80,	80,	86,	87,	89,	89,	91,	97,	103,	101,	100,	107,	106,	114,	108,	111,	110,	112,	121,	122,	120,	121,	124,	123,	129,	128,	129,	136,	129,	140,	137,	133,	145,	141,	146,	143,	141,	143,	148,	144,	150,	149,	148,	158,	151,	152,	154,	163,	159,	167,	161,	165,	166,	162,	168,	166,	172,	168,	167,	172,	175,	177,	172,	181,	174,	177,	182,	189,	188,	187,	181,	182,	184,	184,	192,	196,	191,	192,	190,	196,	201,	196,	199,	204,	197,	205,	204,	200,	199,	204
							     20,	28,	35,	44,	49,	50,	54,	60,	59,	62,	70,	70,	72,	76,	79,	84,	81,	85,	87,	89,	95,	93,	93,	95,	101,	105,	109,	104,	105,	108,	116,	114,	121,	121,	121,	123,	124,	122,	123,	127,	127,	134,	134,	136,	139,	141,	134,	140,	145,	146,	144,	150,	149,	145,	150,	156,	147,	158,	158,	152,	153,	153,	161,	159,	161,	162,	163,	162,	167,	169,	165,	174,	173,	176,	170,	177,	183,	177,	185,	174,	181,	178,	183,	184,	189,	192,	183,	188,	191,	197,	186,	187,	195,	200,	195,	197,	202,	194,	200,	201,	198,	200,	203,	198,	202
				};
			static int sizeJ[] =	{
			//	19, 31, 83,   3119,  6143,
				2,   2,  4,  	//0,	0,	31,	37,	40,	45,	51,	55,	58,	61,	62,	66,	70,	71,	73,	75,	80,	79,	82,	85,	89,	91,	89,	88,	93,	98,	95,	100,	96,	105,	105,	110,	111,	106,	108,	113,	115,	116,	120,	117,	121,	123,	119,	129,	121,	127,	133,	125,	131,	129,	135,	139,	140,	138,	144,	141,	144,	148,	141,	150,	152,	152,	146,	152,	147,	155,	153,	155,	161,	157,	162,	158,	164,	167,	165,	164,	164,	171,	165,	174,	173,	170,	166,	169,	172,	179,	181,	181,	183,	177,	175,	182,	183,	187,	183,	180,	187,	186,	183,	192,	186,	189,	195,	197,	196
							 	 19,	27,	32,	34,	38,	45,	49,	50,	57,	61,	59,	65,	68,	69,	72,	72,	79,	80,	82,	85,	83,	89,	93,	95,	93,	93,	93,	102,	104,	105,	101,	106,	103,	106,	109,	110,	113,	118,	120,	119,	122,	118,	121,	122,	122,	123,	132,	129,	128,	129,	134,	131,	134,	141,	138,	136,	146,	139,	141,	149,	151,	153,	148,	152,	152,	154,	155,	159,	156,	156,	163,	156,	159,	159,	167,	162,	159,	166,	161,	174,	169,	174,	171,	172,	170,	169,	180,	177,	176,	173,	185,	186,	180,	178,	184,	184,	181,	191,	187,	188,	193,	193,	192,	198,	198
				};

			static int sizeK[] =	{
			//	19, 31, 83,  3119, 6143,
				1,   3,  1,//   9,   11, 10, 1, 0, 46, 32, 20, 0, 56, 18, 35, 9, 9, 110, 5, 36, 2, 20, 83, 43, 6, 64, 46, 22, 2, 21, 38, 31, 77, 16, 15, 48, 39, 16, 36, 34, 0, 27, 77, 21, 12, 14, 35, 74, 89, 2, 80, 42, 2, 14, 93, 63, 44, 23, 2, 3, 45, 20, 19, 7, 257, 5, 61, 25, 131, 5, 0, 177, 342, 13, 66, 181, 266, 29, 35, 33, 108, 148, 188, 227, 254, 271, 54, 155, 8, 47, 3, 42, 176, 155, 24, 116, 92, 64, 53, 26, 4, 136, 125, 448, 427, 53, 405, 340
								39,	47,	106,	117,	168,	134,	72,	164,	228,	66,	184,	25,	165,	273,	14,	89,	200,	108,	284,	79,	311,	258,	284,	298,	338,	366,	393,	24,	291,	125,	134,	183,	176,	239,	304,	450,	42,	16,	83,	177,	169,	412,	318,	321,	376,	347,	482,	510,	16,	440,	110,	213,	455,	56,	551,	2,	531,	57,	296,	343,	27,	317,	177,	317,	607,	219,	465,	8,	353,	614,	9,	530,	585,	194,	89,	467,	285,	660,	568,	116,	379,	366,	587,	686,	275,	512,	63,	231,	386,	44,	243,	272,	516,	28,	416,	469,	722,	268,	396,	357,	168,	139,	149,	773,	612
				};
		#elif CORES==8 
			 static int sizeI[] =   { 
			//	19, 31, 83,   3119,  6143,
				2,   2,  4, 	14,	20,	24,	28,	31,	34,	37,	40,	41,	44,	46,	48,	50,	52,	53,	55,	57,	58,	60,	62,	63,	65,	66,	67,	69,	70,	72,	73,	74,	75,	77,	78,	79,	80,	81,	83,	84,	85,	86,	87,	88,	89,	90,	91,	92,	93,	94,	95,	96,	97,	98,	99,	100,	101,	102,	104,	104,	105,	106,	107,	107,	108,	109,	110,	111,	112,	113,	113,	114,	115,	116,	117,	118,	118,	119,	120,	121,	122,	122,	123,	124,	125,	125,	126,	127,	128,	128,	129,	130,	131,	131,	132,	133,	133,	134,	135,	136,	136,	137,	138,	138,	139,	140,	140,	142
				};
			static int sizeJ[] =	{
			//	19, 31, 83,   3119,  6143,
				2,   2,  4,     13,	   19,	23,	27,	30,	33,	36,	38,	41,	43,	45,	47,	49,	51,	53,	55,	56,	58,	60,	61,	63,	64,	66,	67,	68,	70,	71,	72,	74,	75,	76,	77,	79,	80,	81,	82,	83,	84,	85,	87,	88,	89,	90,	91,	92,	93,	94,	95,	96,	97,	98,	99,	100,	101,	102,	102,	103,	104,	105,	106,	107,	108,	109,	110,	110,	111,	112,	113,	114,	115,	115,	116,	117,	118,	119,	119,	120,	121,	122,	123,	123,	124,	125,	126,	126,	127,	128,	129,	129,	130,	131,	132,	132,	133,	134,	134,	135,	136,	136,	137,	138,	138,	139,	140,	141
				};

			static int sizeK[] =	{
			//	19, 31, 83,  3119, 6143,
				1,   3,  1,   103, 	 31,	170,	53,	176,	158,	0,	4,	232,	58,	144,	177,	149,	33,	294,	81,	260,	396,	20,	83,	99,	86,	32,	486,	374,	226,	45,	408,	163,	485,	182,	471,	100,	343,	572,	122,	314,	480,	643,	77,	193,	292,	374,	441,	496,	527,	546,	550,	528,	504,	462,	405,	319,	228,	119,	2,	683,	545,	368,	199,	847,	641,	441,	189,	815,	555,	277,	888,	593,	270,	869,	530,	165,	738,	361,	923,	513,	92,	636,	188,	719,	254,	759,	270,	779,	256,	751,	207,	690,	128,	595,	8,	468,	916,	288,	741,	90,	516,	940,	261,	672,	1083,	373,	789,	420
				};
		#elif CORES==16 
			 static int sizeI[] =   { 
			//	19, 31, 83,   3119,  6143,
				2,   2,  4,     10,	  14,	17,	20,	22,	24,	26,	28,	29,	31,	32,	34,	35,	36,	38,	39,	40,	41,	42,	44,	45,	46,	47,	48,	49,	50,	51,	52,	52,	53,	54,	55,	56,	57,	58,	58,	59,	60,	61,	62,	62,	63,	64,	65,	65,	66,	67,	67,	68,	69,	70,	70,	71,	72,	72,	73,	73,	74,	75,	75,	76,	77,	77,	78,	78,	79,	80,	80,	81,	81,	82,	83,	83,	84,	84,	85,	85,	86,	86,	87,	88,	88,	89,	89,	90,	90,	91,	91,	92,	92,	93,	93,	94,	94,	95,	95,	96,	96,	97,	97,	98,	98,	99,	99,	100
				};
			static int sizeJ[] =	{
			//	19, 31, 83,   3119,  6143,
				2,   2,  4,  	9,	13,	16,	19,	21,	23,	25,	27,	29,	30,	32,	33,	35,	36,	37,	38,	40,	41,	42,	43,	44,	45,	46,	47,	48,	49,	50,	51,	52,	53,	54,	55,	55,	56,	57,	58,	59,	60,	60,	61,	62,	63,	63,	64,	65,	66,	66,	67,	68,	68,	69,	70,	70,	71,	72,	72,	73,	74,	74,	75,	76,	76,	77,	77,	78,	79,	79,	80,	80,	81,	82,	82,	83,	83,	84,	84,	85,	85,	86,	87,	87,	88,	88,	89,	89,	90,	90,	91,	91,	92,	92,	93,	93,	94,	94,	95,	95,	96,	96,	97,	97,	98,	98,	99,	100
				};

			static int sizeK[] =	{
			//	19, 31, 83,  3119, 6143,
				1,   3,  1,   119,	159,	234,	21,	224,	302,	256,	68,	224,	314,	320,	273,	149,	513,	270,	569,	196,	412,	596,	67,	171,	246,	288,	302,	278,	226,	141,	24,	707,	541,	342,	119,	748,	471,	164,	746,	394,	0,	563,	117,	641,	156,	662,	129,	608,	23,	482,	926,	272,	704,	14,	413,	799,	44,	407,	770,	1115,	289,	608,	935,	23,	321,	625,	893,	1151,	155,	405,	640,	881,	1094,	5,	210,	389,	578,	753,	923,	1073,	1228,	1372,	116,	239,	350,	447,	542,	635,	704,	783,	839,	898,	944,	987,	1016,	1044,	1052,	1056,	1061,	1050,	1028,	1004,	965,	928,	875,	821,	773,	596
				};
		#endif

	#endif

	#define sI_max 3130
	#define sJ_max 2600
	#define sK_max 44800
	
#endif

#endif /* required framework for the #I, #J, and #K, which is used in new velusqrt fomurlae on CSIDH */
